name: Build Releases

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

permissions:
  contents: write

env:
  CARGO_TERM_COLOR: always

jobs:
  release-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-gnu
          - aarch64-unknown-linux-musl
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.86
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 60
        env:
          RUSTFLAGS: "-C target-feature=-crt-static"
        run: cross build --target ${{ matrix.target }} --release

      - name: Make Tarball
        run: |
          mv target/${{ matrix.target }}/release/simple-file-store simple-file-store
          XZ_OPT=-e9 tar caf simple-file-store-${{  github.ref_name }}-${{ matrix.target }}.tar.xz simple-file-store

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: simple-file-store-${{  github.ref_name }}-${{ matrix.target }}.tar.xz

  release-macos:
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4

      - name: Install GNU tar
        run: |
          brew install gnu-tar
          echo '/usr/local/opt/gnu-tar/libexec/gnubin' >> $GITHUB_PATH

      - name: Install Rust
        uses: dtolnay/rust-toolchain@1.86
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        run: cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 60
        run: cross build --target ${{ matrix.target }} --release

      - name: Make Tarball
        run: |
          mv target/${{ matrix.target }}/release/simple-file-store simple-file-store
          XZ_OPT=-e9 tar caf simple-file-store-${{  github.ref_name }}-${{ matrix.target }}.tar.xz simple-file-store

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: simple-file-store-${{  github.ref_name }}-${{ matrix.target }}.tar.xz

  # Skip windows for now
  #
  # release-windows:
  #   runs-on: windows-2025
  #   steps:
  #     - uses: actions/checkout@v4
  #
  #     - name: Install Rust
  #       uses: dtolnay/rust-toolchain@1.86
  #
  #     - name: Build
  #       timeout-minutes: 60
  #       run: cargo build --release
  #
  #     - name: Make Tarball
  #       run: |
  #         mv target/release/simple-file-store.exe simple-file-store.exe
  #         7z a -t7z -mx=9 simple-file-store-x86_64-pc-windows-msvc.7z simple-file-store.exe
  #
  #     - name: Upload Release Assets
  #         uses: softprops/action-gh-release@v2
  #         with:
  #           files: simple-file-store-x86_64-pc-windows-msvc.7z
